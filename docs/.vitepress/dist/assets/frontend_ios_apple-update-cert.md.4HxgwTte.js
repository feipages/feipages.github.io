import{_ as e,c as i,o as a,ag as o}from"./chunks/framework.BHpayLOB.js";const r="/img/apple/1-1.png",s="/img/apple/2-1-0.png",n="/img/apple/2-1-1.png",l="/img/apple/2-1-2.png",d="/img/apple/2-1-3.png",p="/img/apple/2-1-4.png",c="/img/apple/2-2-1.png",m="/img/apple/2-2-2.png",g="/img/apple/2-2-3.png",_="/img/apple/2-2-4.png",u="/img/apple/2-3-0.png",P="/img/apple/2-3-1.png",h="/img/apple/2-3-2.png",f="/img/apple/2-3-3.png",q="/img/apple/2-3-4.png",C="/img/apple/2-4-1.png",b="/img/apple/2-4-2.png",A="/img/apple/2-4-3.png",v="/img/apple/2-4-4.png",x="/img/apple/2-4-5.png",D="/img/apple/3-1-1.png",I="/img/apple/3-1-2.png",S="/img/apple/3-1-3.png",N="/img/apple/3-1-4.png",k="/img/apple/3-2.png",w=JSON.parse('{"title":"更新 App store 发布证书","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ios/apple-update-cert.md","filePath":"frontend/ios/apple-update-cert.md"}'),R={name:"frontend/ios/apple-update-cert.md"};function B(O,t,T,$,y,E){return a(),i("div",null,t[0]||(t[0]=[o('<h1 id="更新-app-store-发布证书" tabindex="-1">更新 App store 发布证书 <a class="header-anchor" href="#更新-app-store-发布证书" aria-label="Permalink to &quot;更新 App store 发布证书&quot;">​</a></h1><h2 id="分三步去更新" tabindex="-1">分三步去更新 <a class="header-anchor" href="#分三步去更新" aria-label="Permalink to &quot;分三步去更新&quot;">​</a></h2><ol><li>首先找到已过期的APP ID;</li><li>根据APP ID重新生成Certifictes;</li><li>更新Provisioning Profiles.</li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><h3 id="_1-确定已过期的-app-id" tabindex="-1">1.确定已过期的 APP ID <a class="header-anchor" href="#_1-确定已过期的-app-id" aria-label="Permalink to &quot;1.确定已过期的 APP ID&quot;">​</a></h3><p>1.1 找到已过期或者即将过期的 APP ID(Xcode 中为bundle id),位于图图1-1中3所在位置。将该 APP ID （以下简称id）记录下来。 <img src="'+r+'" alt="图1-1"></p><h3 id="_2-根据app-id重新生成certifictes" tabindex="-1">2.根据APP ID重新生成Certifictes <a class="header-anchor" href="#_2-根据app-id重新生成certifictes" aria-label="Permalink to &quot;2.根据APP ID重新生成Certifictes&quot;">​</a></h3><p>2.1 点击 Certificates 中的 Production可以看到所有的生产环境的证书，同时也可以看到是否过期。选择右上角的新建+，如下图所示。 <img src="'+s+'" alt=""></p><p>选择证书的适用的场景, （1）Development 对应 xcode 中的debug环境，开发调试的使用，包含了推送与非推送版本。 （2）Production 对应 xcode 中的 release 环境，也即是上线 app store 的环境, 常用的是有不带推送的、带推送的、带apple pay的证书。 示例就以生产中带推送的做参考，选择 Apple Push Notification, 点击Continue。 <img src="'+n+'" alt=""><img src="'+l+'" alt=""> 选择需要更新的APP ID, 点击Continue <img src="'+d+'" alt=""> 出现创建CSR文件的界面，里面说明了创建的步骤。下面我们按照步骤创建CSR。 <img src="'+p+'" alt=""> 在mac应用程序中找到 “钥匙串访问”,打开“钥匙串访问”app, <img src="'+c+'" alt=""> 在导航栏中点击“钥匙串访问”-&gt; &quot;证书助理&quot; -&gt; &quot;从证书颁发机构请求证书&quot;, <img src="'+m+'" alt=""> 输入邮箱地址,常用名称,选择存储到磁盘,点击“继续”.其中常用名称可以采用公司名称+app名称+环境名 <img src="'+g+'" alt=""> 输入名称名称, 选择存储位置, 点击&quot;存储&quot;. 将请求下来的的CSR证书保存在桌面上。 <img src="'+_+'" alt=""> 回到创建证书的页面，点击&quot;Continu&quot; <img src="'+p+'" alt=""> 出现选择证书的页面，点击&quot;Choose File...&quot; <img src="'+u+'" alt=""> 找到之前创建的CSR文件，点击&quot;选取&quot; <img src="'+P+'" alt=""> 上传CSR文件, 点击“Continue” <img src="'+h+'" alt=""> 上传完成之后,证书就生成完毕, 点击&quot;Download&quot;,下载到本地磁盘。 <img src="'+f+'" alt=""> 下载完毕后会得到一个aps.cer证书, 但是不能直接发给别人使用, 需要双击cer文件，安装到钥匙串中，然后导出为.p12文件. <img src="'+q+'" alt=""></p><p>接下来说明一下导出P12文件给服务器使用。 在钥匙串中找到对应id的证书（可以通过id+证书名称确定） <img src="'+C+'" alt=""> 选择导出“Apple Push Service: xxxxx” <img src="'+b+'" alt=""> 弹出保存框, 输入存储名称，选择存储位置，点击&quot;存储&quot;。存储名称建议使用公司名称+app名称+环境+apns的形式,方便以管理。 <img src="'+A+'" alt=""> 输入导出的密码, 此密码用于其他人员读取P12文件时使用。 <img src="'+v+'" alt=""> 输入电脑登录用户的密码,点击“允许”。此处成功导出P12推送证书。备注：有的服务器只识别pem格式的文件，需要将P12格式转换为pem格式的。 <img src="'+x+'" alt=""> 再次回到apple deleloper 页面,找到已过期的的描述文件（Provisioning Profiles）,点击“Edit”, <img src="'+D+'" alt=""> 选择对应的App ID 以及 Certificates, 点击 “Generate” <img src="'+I+'" alt=""> 到此新的Provisioning Profiles 已生成，点击&quot;Download&quot; <img src="'+S+'" alt=""> 刚才已过期的 Provisioning Profiles 的 Status has changed to Active <img src="'+N+'" alt=""> 按照同样的方式，更新development 下的Certificates &amp; Provisioning Profiles 一共产生了5个文件，如下图所示 <img src="'+k+'" alt=""></p><table tabindex="0"><thead><tr><th>序列</th><th>示例</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>BOCI_appName_development_apns.p12</td><td>Apple Push Development Certificate</td><td>xcode debug app</td></tr><tr><td>2</td><td>BOCI_appName_distribution_apns.p12</td><td>Apple Push Production Certificate</td><td>xcode release app/backend push server</td></tr><tr><td>3</td><td>BOCI_appName_distribution_apns.mobileprovision</td><td>Production Provisioning Profiles</td><td>xcode release app</td></tr><tr><td>4</td><td>BOCI_appName_development_apns.mobileprovision</td><td>Development Provisioning Profiles</td><td>xcode debug app</td></tr><tr><td>5</td><td>BOCI_appName_distribution_apns.certSigningRequest</td><td>CSR</td><td>自己保留</td></tr></tbody></table><p>将1-4的文件发送给开发人员,开发人员根据新的证书重新打包ipa,上线发布app就可以了。</p><p>2019-04-28</p>',13)]))}const F=e(R,[["render",B]]);export{w as __pageData,F as default};
