import{_ as l,c as a,o as t,ag as p}from"./chunks/framework.BHpayLOB.js";const _=JSON.parse('{"title":"iOS App 程序启动过程","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/ios/index.md","filePath":"frontend/ios/index.md"}'),e={name:"frontend/ios/index.md"};function n(o,i,c,r,d,s){return t(),a("div",null,i[0]||(i[0]=[p('<h1 id="ios-app-程序启动过程" tabindex="-1">iOS App 程序启动过程 <a class="header-anchor" href="#ios-app-程序启动过程" aria-label="Permalink to &quot;iOS App 程序启动过程&quot;">​</a></h1><p>在main函数中进行的设置UIApplication对象的代理。 App容易受到干扰。正在玩游戏，一个电话打过来了。</p><ul><li>应用程序的生命周期事件(如程序启动和关闭)</li><li>系统事件(如来电)</li><li>内存警告</li><li>… … ** 处理这些干扰事件，就要用到AppDelegate代理对象了。 ** 总结: AppDelegate的主要作用就是处理(监听)应用程序本身的各种事件:</li><li>应用程序启动完毕</li><li>应用程序进入后台</li><li>应用程序进入前台</li><li>内存警告</li><li>等等, 都是应用程序自身的一些事件 ** 要想成为UIApplication的代理对象, 必须遵守:UIApplicationDelegate协议。 ** 代理中的若干方法介绍:</li></ul><ol><li><ul><li>(BOOL)application: didFinishLaunchingWithOptions: // app第一次启动完毕后就会调用(当程序启动后会显示一张启动图片, 当这个图片显示完毕, 消失后, 就开始调用这个方法)</li></ul></li><li><ul><li>(void)applicationDidEnterBackground:(UIApplication *)application // 当程序进入后台时, 调用该方法。（比如：按了Home键, 或者一个电话打过来了, 当前程序都会进入后台。） // 在这个方法中可以做一些保存当前程序数据, 暂停程序的操作。</li></ul></li><li><ul><li>(void)applicationWillEnterForeground:(UIApplication *)application // 当程序再次进入前台的时候调用。</li></ul></li><li><ul><li>(void)applicationDidReceiveMemoryWarning:(UIApplication *)application // 当发生内存警告时触发该事件。 程序启动后： didFinishLaunchingWithOptions--&gt;applicationDidBecomeActive 按home键使程序进入后台：applicationWillResignActive---&gt;applicationDidEnterBackground 让程序会到主界面：applicationWillEnterForeground---&gt;applicationDidBecomeActive 在主界面时让程序退出：applicationDidEnterBackground---&gt;applicationWillTerminate 在后台时退出：applicationWillTerminate</li></ul></li></ol><p>date: 2017-04-22 16:00:00 author: &quot;Gao Fei&quot;</p>',5)]))}const g=l(e,[["render",n]]);export{_ as __pageData,g as default};
